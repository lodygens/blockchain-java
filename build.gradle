/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    
    // https://web3j.io/
    compile ('org.web3j:core:3.2.0')

}

// Define the main class for the application
mainClassName = 'AccessContract'


task solidityOutputDirectory(type: Exec) {
    commandLine("sh", "-c",
            "mkdir -p " + solidityBinDir
    )
}

task solidityCleanBinary(type: Exec, dependsOn: solidityOutputDirectory) {
    commandLine("sh", "-c",
            "rm -Rf " + solidityBinDir + "/*"
    )
}

task solidity2binary(type: Exec, dependsOn: solidityCleanBinary) {
    commandLine("sh", "-c",
            "solc src/main/solidity/simple-contract/contracts/ProofOfExistence1.sol --bin  --abi --optimize -o " + solidityBinDir
    )
}

task solidity2java(type: Exec, dependsOn: solidity2binary) {
    commandLine("sh", "-c",
            "web3j solidity generate --javaTypes " + solidityBinDir + "/ProofOfExistence1.bin " + solidityBinDir + "/ProofOfExistence1.abi -o " + solidityJavaDir + " -p " + javaPackage 
    )
}


build.dependsOn solidity2java
